# Generated by Django 5.2.7 on 2025-10-17 14:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True, verbose_name='IP Address')),
                ('hostname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Hostname')),
                ('mac_address', models.CharField(blank=True, max_length=17, null=True, verbose_name='MAC Address')),
                ('os', models.CharField(blank=True, max_length=100, null=True, verbose_name='Operating System')),
                ('is_critical', models.BooleanField(default=False, verbose_name='Is Critical?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('subject', models.CharField(help_text='The subject of the email. You can use {{target_name}}.', max_length=255)),
                ('body', models.TextField(help_text="The HTML body of the email. Use {{phishing_link}} for the malicious link and {{target_name}} for the target's name.")),
                ('telegram_message', models.TextField(blank=True, help_text='Plain text message for Telegram. Use {{phishing_link}} and {{target_name}}.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='IndicatorOfCompromise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ioc_type', models.CharField(choices=[('IP', 'IP Address'), ('DOMAIN', 'Domain Name'), ('HASH', 'File Hash'), ('URL', 'URL')], max_length=10)),
                ('value', models.CharField(max_length=500, unique=True)),
                ('source', models.CharField(blank=True, help_text='e.g., MISP, VirusTotal', max_length=100, null=True)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LandingPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('html_content', models.TextField(help_text='The full HTML source of the cloned landing page.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhishingTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('telegram_user_id', models.CharField(blank=True, help_text="The target's numeric Telegram User ID", max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Playbook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Nikto, Nmap, SQLMap', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('command_template', models.CharField(help_text='e.g., nikto -h {target} -o {output} -format json', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Timestamp')),
                ('description', models.TextField(verbose_name='Description')),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=10)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('FALSE_POSITIVE', 'False Positive')], default='NEW', max_length=20)),
                ('source_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('destination_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('source_tool', models.CharField(help_text='e.g., Suricata, Wazuh, Splunk', max_length=100)),
                ('raw_log', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.asset')),
            ],
        ),
        migrations.CreateModel(
            name='PhishingCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='DRAFT', max_length=20)),
                ('launch_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.emailtemplate')),
                ('landing_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.landingpage')),
                ('targets', models.ManyToManyField(related_name='campaigns', to='core.phishingtarget')),
            ],
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.CharField(max_length=500)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='core.alert')),
                ('playbook_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.playbook')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_url', models.CharField(max_length=500, verbose_name='Target')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('is_playbook_scan', models.BooleanField(default=False, help_text='Was this scan initiated by a playbook?')),
                ('eyewitness_report_path', models.CharField(blank=True, help_text='Path to the generated Eyewitness report', max_length=500, null=True)),
                ('tool', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.tool')),
            ],
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('severity', models.CharField(max_length=50)),
                ('cve_id', models.CharField(blank=True, max_length=50, null=True)),
                ('details', models.JSONField()),
                ('ai_analysis', models.TextField(blank=True, help_text='AI-generated analysis of the vulnerability', null=True)),
                ('metasploit_module', models.CharField(blank=True, help_text='The corresponding Metasploit module name', max_length=200, null=True)),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilities', to='core.scan')),
            ],
        ),
        migrations.CreateModel(
            name='PhishingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('is_opened', models.BooleanField(default=False)),
                ('opened_date', models.DateTimeField(blank=True, null=True)),
                ('is_clicked', models.BooleanField(default=False)),
                ('clicked_date', models.DateTimeField(blank=True, null=True)),
                ('submitted_data', models.BooleanField(default=False)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('captured_data', models.JSONField(blank=True, help_text='Stores captured data like username/password.', null=True)),
                ('ai_analysis', models.TextField(blank=True, help_text='AI-generated analysis of the captured data.', null=True)),
                ('captured_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('captured_user_agent', models.CharField(blank=True, max_length=500, null=True)),
                ('captured_geolocation', models.JSONField(blank=True, help_text='Stores latitude and longitude', null=True)),
                ('captured_image_path', models.CharField(blank=True, help_text='Path to the captured webcam image', max_length=500, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.phishingcampaign')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.phishingtarget')),
            ],
            options={
                'unique_together': {('campaign', 'target')},
            },
        ),
    ]
